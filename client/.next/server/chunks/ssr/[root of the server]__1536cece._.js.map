{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://C%3A/vsCodeFolder/1.webDevelopment/1.WebProjects/3.Snap-Vote/client/src/app/api/auth/%5B...nextauth%5D/auth.ts"],"sourcesContent":["\r\nimport axios from \"axios\";\r\nimport { ISODateString } from \"next-auth\";\r\nimport { JWT } from \"next-auth/jwt\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport NextAuth from \"next-auth\";\r\n\r\n//custom user\r\nexport type CustomUser = {\r\n    userId?: string | null,\r\n    name?: string | null,\r\n    email?: string | null,\r\n    createdAt?: string | null,\r\n    updatedAt?: string | null,\r\n    token?: string | null\r\n\r\n}\r\n\r\n\r\n//custom session\r\nexport type CustomSession = {\r\n    user?: CustomUser,\r\n    expires?: ISODateString\r\n}\r\n\r\n//auth options:- \r\n\r\nexport default NextAuth({\r\n    providers: [\r\n        CredentialsProvider({\r\n            name: \"Credentials\",\r\n            type:\"credentials\",\r\n            credentials: {\r\n                email: { label: \"Email\", type:\"email\", placeholder:\"Enter your email\"},\r\n                password: { label:\"Password\", type:\"password\"}\r\n            },\r\n            async authorize( credentials, req ){\r\n\r\n                // console.log(\"credentials:-----------------\",credentials);\r\n                if (!credentials || !credentials.email || !credentials.password) {\r\n                    // throw new Error(\"Email and password are required\");.\r\n                    return null;\r\n                }\r\n\r\n                try{\r\n       \r\n                const { data} = await axios.post(\r\n                    `${process.env.NEXT_PUBLIC_BACKEND_API_URL}/user/login`,\r\n                    credentials,\r\n                    { headers:{ \"Content-Type\":\"application/json\"}}\r\n                )\r\n\r\n                const user = data.data as CustomUser;\r\n                if(user){\r\n                    return user;\r\n                }\r\n                else{\r\n                    return null;\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                return null;\r\n            }\r\n                \r\n            }\r\n        })\r\n\r\n    ],\r\n    pages: {\r\n        signIn: \"/login\"\r\n    },\r\n    callbacks: {\r\n        async jwt({ token, user}:{ token:JWT, user:CustomUser}){\r\n              \r\n            // Persist the OAuth access_token to the token after signin\r\n            //   console.log(\"2222222222 \",token, \" 4444444444444 \",user);\r\n\r\n            if(user){\r\n                token.user = user;\r\n            }\r\n\r\n            return token;\r\n        },\r\n        async session({ user, token, session}:{ user:CustomUser, token: JWT, session: CustomSession}){\r\n            session.user = token.user as CustomUser;\r\n            return session;\r\n        }\r\n    },\r\n    \r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;AACA;AAGA;AACA;;;;uCAsBe,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE;IACpB,WAAW;QACP,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE;YAChB,MAAM;YACN,MAAK;YACL,aAAa;gBACT,OAAO;oBAAE,OAAO;oBAAS,MAAK;oBAAS,aAAY;gBAAkB;gBACrE,UAAU;oBAAE,OAAM;oBAAY,MAAK;gBAAU;YACjD;YACA,MAAM,WAAW,WAAW,EAAE,GAAG;gBAE7B,4DAA4D;gBAC5D,IAAI,CAAC,eAAe,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,QAAQ,EAAE;oBAC7D,uDAAuD;oBACvD,OAAO;gBACX;gBAEA,IAAG;oBAEH,MAAM,EAAE,IAAI,EAAC,GAAG,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC5B,6DAA2C,WAAW,CAAC,EACvD,aACA;wBAAE,SAAQ;4BAAE,gBAAe;wBAAkB;oBAAC;oBAGlD,MAAM,OAAO,KAAK,IAAI;oBACtB,IAAG,MAAK;wBACJ,OAAO;oBACX,OACI;wBACA,OAAO;oBACX;gBACJ,EACA,OAAM,KAAI;oBACN,QAAQ,GAAG,CAAC;oBACZ,OAAO;gBACX;YAEA;QACJ;KAEH;IACD,OAAO;QACH,QAAQ;IACZ;IACA,WAAW;QACP,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAA+B;YAElD,2DAA2D;YAC3D,8DAA8D;YAE9D,IAAG,MAAK;gBACJ,MAAM,IAAI,GAAG;YACjB;YAEA,OAAO;QACX;QACA,MAAM,SAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAwD;YACxF,QAAQ,IAAI,GAAG,MAAM,IAAI;YACzB,OAAO;QACX;IACJ;AAEJ","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file://C%3A/vsCodeFolder/1.webDevelopment/1.WebProjects/3.Snap-Vote/client/src/app/dashboard/page.tsx"],"sourcesContent":["\"use server\"\r\n// import React, { useEffect } from 'react';\r\nimport authOptions, { CustomUser } from \"../api/auth/[...nextauth]/auth\";\r\nimport { getSession, useSession } from 'next-auth/react';\r\nimport AddClash from '@/components/clash/AddClash';\r\nimport { fetchAllClashes } from '@/actions/clash/fetchAllClashes';\r\nimport { Button } from '@/components/ui/button';\r\nimport { getServerSession } from 'next-auth';\r\n\r\n\r\n\r\nconst Home = async () => {\r\n\r\n    const session =  await getServerSession(authOptions);\r\n\r\n    // const handleData = ()=>{\r\n\r\n    //     if(session?.data?.user){\r\n    //         fetchAllClashes(session. as CustomUser);\r\n    //     }\r\n    // }\r\n\r\n    console.log(\"-----------------------\")\r\n    console.log(\"{{{{{{{{{{{{{{{{\",session);\r\n    console.log(\"-----------------------\")\r\n\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <div className='border-2 border-red-300 h-[100vh] w-[99vw] overflow-hidden p-0'>\r\n        \r\n        <div className='border-2 flex items-center justify-end p-2 pr-8'>\r\n          {/* <AddClash user={session?.data?.user as CustomUser}/> */}\r\n          <div>{JSON.stringify(session)}</div>\r\n        </div>\r\n        {/* <Button onClick={handleData}>Click me</Button> */}\r\n        \r\n        <div>\r\n\r\n        </div>\r\n        {/* <p className='w-full'>{JSON.stringify(session)}</p> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;AACA,4CAA4C;AAC5C;AAKA;;;;;;;AAIA,MAAM,OAAO;IAET,MAAM,UAAW,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,uJAAA,CAAA,UAAW;IAEnD,2BAA2B;IAE3B,+BAA+B;IAC/B,mDAAmD;IACnD,QAAQ;IACR,IAAI;IAEJ,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,oBAAmB;IAC/B,QAAQ,GAAG,CAAC;IAMd,qBACE,8OAAC;QAAI,WAAU;;0BAEX,8OAAC;gBAAI,WAAU;0BAEb,cAAA,8OAAC;8BAAK,KAAK,SAAS,CAAC;;;;;;;;;;;0BAIvB,8OAAC;;;;;;;;;;;AAMT;uCAEe,uCAAE,GAAF;;;IAAA;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}